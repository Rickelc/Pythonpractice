{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9fd65bd2",
   "metadata": {},
   "source": [
    "# Chapter 1 exercises\n",
    "Problems 1, 3, and 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3817d917",
   "metadata": {},
   "source": [
    "## Problem 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a591c40a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is a test of the Python Interpreter.\n"
     ]
    }
   ],
   "source": [
    "print('This is a test of the Python Interpreter.')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5797d02",
   "metadata": {},
   "source": [
    "## Problem 3"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f613f37",
   "metadata": {},
   "source": [
    "### This problem wants us to find the binary equivalent to regular numbers\n",
    "11 as a binary number would come out to be 1011\n",
    "This is because the spots in binary for 8, 2, and 1 are \"on\" or \"active\". So that means 1011 essentially means 8+2+1, which equals 11\n",
    "the one spot that is a 0 is inactive, that spot in binary represents 4. that number isn't added up in the binary number 1011\n",
    "\n",
    "65 as a binary number would be 1000001 \n",
    "So the only spot in binary active are the ones for 64 and 1, and obviously those together mean 65. the numbers of 32, 16, 8, 4, and 2 all have to be inactive for this number to come out to be 65 in binary\n",
    "\n",
    "100 as a binary number would be 1100100\n",
    "the spots that are active are 64, 32, and 4 because the sum of those numbers are 100, so 16, 8, 2, and 1 have to be inactive as 0's\n",
    "\n",
    "255 as a binary number ends up being 11111111\n",
    "this binary number is an example of the most amount of data that a byte can store, all of the spots are active so 128+64+32+16+8+4+2+1 is 255"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a56481d6",
   "metadata": {},
   "source": [
    "## Problem 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94705282",
   "metadata": {},
   "source": [
    "### This problem wants us to find the regular number equivalent to binary numbers\n",
    "1101 in binary comes out to the number 13\n",
    "the 3 spots active are represent 8, 4, and 1 so 8+4+1 is equal to 13\n",
    "\n",
    "1000 in binary represents the number 8\n",
    "The spot which represents the number 8 is the only spot active which means this binary number is only representing the number 8\n",
    "\n",
    "101011 in binary represents the number 43\n",
    "the spots for 32, 8, 2 and 1 are active and the sum of those numbers is equal to 43"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99d7f437",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
